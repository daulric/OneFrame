"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[198],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return t?a.createElement(g,o(o({ref:n},c),{},{components:t})):a.createElement(g,o({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},24287:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const l={sidebar_position:1},o=void 0,i={unversionedId:"Component/extend",id:"Component/extend",title:"extend",description:"Creating a Component using extend",source:"@site/docs/Component/extend.md",sourceDirName:"Component",slug:"/Component/extend",permalink:"/OneFrame/docs/Component/extend",draft:!1,editUrl:"https://github.com/daulric/OneFrame/edit/main/docs/Component/extend.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/OneFrame/docs/intro"},next:{title:"CreateComponent",permalink:"/OneFrame/docs/Component/CreateComponent"}},p={},s=[{value:"Creating a Component using extend",id:"creating-a-component-using-extend",level:2},{value:"Basic Functions",id:"basic-functions",level:2},{value:"Built In Funtions",id:"built-in-funtions",level:2},{value:"Event Service",id:"event-service",level:2},{value:"<strong>Initializing a Send Event</strong>",id:"initializing-a-send-event",level:3},{value:"<strong>Initialising a Get Event</strong>",id:"initialising-a-get-event",level:3},{value:"Send / Get Types",id:"send--get-types",level:3},{value:"Cleanup Service",id:"cleanup-service",level:2}],c={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"creating-a-component-using-extend"},"Creating a Component using extend"),(0,r.kt)("p",null,"This code will be executed!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local OneFrame = require(path.to.module)\n\nlocal Component = OneFrame.Component:extend(name)\n\nreturn Component\n")),(0,r.kt)("h2",{id:"basic-functions"},"Basic Functions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":init")," - this inialize the component before the main function runs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:init(...)\n    -- code here\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":preload")," - this will preload anything before it renders the function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:preload(...)\n    -- code here\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":render")," will render the main code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render(...)\n    -- code here\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":closing")," - will render when the game is closing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:closing(...)\n    -- code here\nend\n")),(0,r.kt)("h2",{id:"built-in-funtions"},"Built In Funtions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":setState")," - this sets a state to the component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render()\n    self:setState({\n        money = 100\n    })\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".state")," - this returns the state"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render()\n    print(self.state.money) -- 100\nend\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":require")," - this will require any components that was created using ",(0,r.kt)("inlineCode",{parentName:"p"},"createComponent")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render()\n    local module = self:require(path.to.component)\n    print(module)\nend\n")),(0,r.kt)("h2",{id:"event-service"},"Event Service"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"self.Event")," to get the Event Class of the Component"),(0,r.kt)("h3",{id:"initializing-a-send-event"},(0,r.kt)("strong",{parentName:"h3"},"Initializing a Send Event")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render()\n    self.Event.Send(id: string)\nend\n")),(0,r.kt)("h3",{id:"initialising-a-get-event"},(0,r.kt)("strong",{parentName:"h3"},"Initialising a Get Event")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"function Component:render()\n    self.Event.Get(id: string)\nend\n")),(0,r.kt)("h3",{id:"send--get-types"},"Send / Get Types"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cross")," - this sends / get data from server/client to another server/client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Cross(\n    ...any\n) -> any | ()\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Server")," - this sends / get data from the client to the server"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Server(\n    ...any\n) -> any | ()\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Client")," - this sends / get data from the server to the client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Client(\n    player: Player,\n    ...any\n) -> any | ()\n")),(0,r.kt)("h2",{id:"cleanup-service"},"Cleanup Service"),(0,r.kt)("p",null,"Cleanup Service is there to keep the roblox eco-system clean at all times.\nThis manages memory leaks and handles garbage collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":Add()")," - this adds the object in a queue to be cleaned up!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Add(\n    obj: Instance\n) -> Instance\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":Connect")," - this added Script Connections in the queue to be cleaned up!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Connect(\n    connection: RBXScriptSignal,\n    callback: (...any) -> ()\n) -> RBXScriptConnection\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":Remove()")," - this will disconnect events or destroy objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Remove(\n    obj: Instance | RBXScriptConnection\n) -> ()\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":Clean()")," - this will clean all of objects and connections that was stored the queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},":Clean() -> boolean\n")))}d.isMDXComponent=!0}}]);