[{"title":"CreateComponent","type":0,"sectionRef":"#","url":"/OneFrame/docs/Component/CreateComponent","content":"","keywords":""},{"title":"Creating Component​","type":1,"pageTitle":"CreateComponent","url":"/OneFrame/docs/Component/CreateComponent#creating-component","content":"local OneFrame = require(path.to.module) local Component = OneFrame.Component:createComponent() function Component:print(...) print(...) end return Component  Created a component "},{"title":"Calling Component​","type":1,"pageTitle":"CreateComponent","url":"/OneFrame/docs/Component/CreateComponent#calling-component","content":"local OneFrame = require(path.to.module) local Test = OneFrame.Component:extend(&quot;test&quot;) function Test:render() local component = self:require(path.to.component) component:print(&quot;Hello&quot;, &quot;Bye&quot;) -- Hello, Bye end return Test  "},{"title":"GetComponents","type":0,"sectionRef":"#","url":"/OneFrame/docs/Component/GetComponents","content":"","keywords":""},{"title":"Get Components​","type":1,"pageTitle":"GetComponents","url":"/OneFrame/docs/Component/GetComponents#get-components","content":"local OneFrame = require(path.to.module) local Components = OneFrame.Component:GetComponents() print(Components) -- table  "},{"title":"Component","type":0,"sectionRef":"#","url":"/OneFrame/api/Component","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#types","content":" "},{"title":"self​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#self","content":"&lt;/&gt; interface self { state: {[any]: any}-- returns items that was set using :setState Cleanup: Cleanup Event: Event } this will return once :extend is called "},{"title":"Functions​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#functions","content":" "},{"title":"extend​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#extend","content":"&lt;/&gt; Component:extend( name: any, test: boolean ) → ()   "},{"title":"require​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#require","content":"&lt;/&gt; Component:require(modulescript: ModuleScript ) → () This will only work when Component:extend() is called and it works using the self statement Example: local Component = OneFrame.Component:extend(&quot;Hello&quot;) function Component:render() self:require(module) end return Component   "},{"title":"setState​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#setState","content":"&lt;/&gt; Component:setState(value: any) → () This only works when Component:extend() is called using the self statement local Component = OneFrame.Component:extend(&quot;Test&quot;) function Component:render() self:setState({ hello = 0 }) end return Component   "},{"title":"createComponent​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#createComponent","content":"&lt;/&gt; Component:createComponent() → ()   "},{"title":"GetComponent​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#GetComponent","content":"&lt;/&gt; Component:GetComponent(name: string) → ()   "},{"title":"GetComponents​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#GetComponents","content":"&lt;/&gt; Component:GetComponents() → ()   "},{"title":"GetRegisteredSignal​","type":1,"pageTitle":"Component","url":"/OneFrame/api/Component#GetRegisteredSignal","content":"&lt;/&gt; Component:GetRegisteredSignal(handler: (...any)) → ()  "},{"title":"GetRegisteredSignal","type":0,"sectionRef":"#","url":"/OneFrame/docs/Component/GetRegisteredSignal","content":"GetRegisteredSignal This function listens for the names of Components that has been registered! local OneFrame = require(path.to.module) OneFrame.Component:GetRegisteredSignal( handler: (name: string) -&gt; () ) -&gt; () ","keywords":""},{"title":"extend","type":0,"sectionRef":"#","url":"/OneFrame/docs/Component/extend","content":"","keywords":""},{"title":"Creating a Component using extend​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#creating-a-component-using-extend","content":"This code will be executed! local OneFrame = require(path.to.module) local Component = OneFrame.Component:extend(name) return Component  "},{"title":"Basic Functions​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#basic-functions","content":":init - this inialize the component before the main function runs function Component:init(...) -- code here end  :preload - this will preload anything before it renders the function. function Component:preload(...) -- code here end  :render will render the main code function Component:render(...) -- code here end  :closing - will render when the game is closing function Component:closing(...) -- code here end  "},{"title":"Built In Funtions​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#built-in-funtions","content":":setState - this sets a state to the component function Component:render() self:setState({ money = 100 }) end  .state - this returns the state function Component:render() print(self.state.money) -- 100 end  :require - this will require any components that was created using createComponent function Component:render() local module = self:require(path.to.component) print(module) end  "},{"title":"Event Service​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#event-service","content":"Use self.Event to get the Event Class of the Component "},{"title":"Initializing a Send Event​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#initializing-a-send-event","content":"function Component:render() self.Event.Send(id: string) end  "},{"title":"Initialising a Get Event​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#initialising-a-get-event","content":"function Component:render() self.Event.Get(id: string) end  "},{"title":"Send / Get Types​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#send--get-types","content":"Cross - this sends / get data from server/client to another server/client :Cross( ...any ) -&gt; any | ()  Server - this sends / get data from the client to the server :Server( ...any ) -&gt; any | ()  Client - this sends / get data from the server to the client :Client( player: Player, ...any ) -&gt; any | ()  "},{"title":"Cleanup Service​","type":1,"pageTitle":"extend","url":"/OneFrame/docs/Component/extend#cleanup-service","content":"Cleanup Service is there to keep the roblox eco-system clean at all times. This manages memory leaks and handles garbage collection :Add() - this adds the object in a queue to be cleaned up! :Add( obj: Instance ) -&gt; Instance  :Connect - this added Script Connections in the queue to be cleaned up! :Connect( connection: RBXScriptSignal, callback: (...any) -&gt; () ) -&gt; RBXScriptConnection  :Remove() - this will disconnect events or destroy objects :Remove( obj: Instance | RBXScriptConnection ) -&gt; ()  :Clean() - this will clean all of objects and connections that was stored the queue :Clean() -&gt; boolean  "},{"title":"Installation","type":0,"sectionRef":"#","url":"/OneFrame/docs/intro","content":"","keywords":""},{"title":"Method 1: Use Wally​","type":1,"pageTitle":"Installation","url":"/OneFrame/docs/intro#method-1-use-wally","content":"Get the Package from WallyUse rojo to port the package to roblox "},{"title":"Method 2: Download Model File​","type":1,"pageTitle":"Installation","url":"/OneFrame/docs/intro#method-2-download-model-file","content":"Download the OneFrame module here You can download the module directly from its source and drag it in your roblox studio workspace. "},{"title":"Start","type":0,"sectionRef":"#","url":"/OneFrame/docs/Start","content":"Start This runs components within a particular folder local OneFrame = require(path.to.module) OneFrame.Start( Folder: Instance, ignorePrint: boolean, ...any, -- any thing can be added to this path ) ","keywords":""}]